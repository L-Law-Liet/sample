<?php


namespace App\Modules\Status\Facades;


use App\Facades\ModuleFacade;
use App\Models\ProductStatus;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Support\Facades\Log;

class StatusesFacade extends ModuleFacade
{
    protected function model(): string
    {
        return ProductStatus::class;
    }

    /**
     * @param string $deleted
     * @return mixed
     */
    public function statuses(string $deleted = '')
    {
        return ($deleted) ? $this->onlyTrashed() : $this->model::query();
    }

    /**
     * @param $data
     * @return mixed
     */
    public function create($data)
    {
        try {
            $this->authorize('create', ProductStatus::class);
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to create the status');
        }
        return $this->model->create($data);
    }

    /**
     * @param $data
     * @param int $id
     * @return mixed
     */
    public function update($data, int $id)
    {
        $status = $this->findOrFail($id);
        try {
            $this->authorize('update', [ProductStatus::class, $status]);
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to update the status with id: ' . $id);
        }
        return $status->update($data);
    }

    /**
     * @param array|int $ids
     * @return mixed
     */
    public function delete($ids)
    {
        $status = $this->findOrFail($ids);
        try {
            $this->authorize('delete', [ProductStatus::class, $status]);
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to delete the status');
        }
        return parent::delete($ids); // TODO: Change the autogenerated stub
    }

    /**
     * @param int $id
     */
    public function restore(int $id)
    {
        $status = $this->onlyTrashed()->findOrFail($id);
        try {
            $this->authorize('restore', $status);
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to restore the status with id: ' . $id);
        }
        $status->restore();
        $status->save();
    }

    /**
     * @return mixed
     */
    public function onlyTrashed()
    {
        return $this->model->onlyTrashed();
    }
}
