<?php


namespace App\Modules\Product\Facades;


use App\Facades\ModuleFacade;
use App\Models\Comment;
use App\Models\Product;
use App\Models\ProductStatus;
use App\Policies\UserPolicy;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Auth\Access\Gate;
use Illuminate\Support\Facades\Log;

class CommentsFacade extends ModuleFacade
{

    protected function model(): string
    {
        return Comment::class;
    }

    /**
     * @param int $id
     * @return mixed
     */
    public function getByProductId(int $id)
    {
        return $this->model->where('product_id', $id)->with('user')->get();
    }

    /**
     * @param array $data
     * @return Comment
     */
    public function create(array $data): Comment
    {
        try {
            $this->authorize('create', $data['product_id']);
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to add comment to product with id: ' . $data['product_id']);
        }
        return $this->model->create($data);
    }

    /**
     * @param array|int $ids
     * @return mixed
     */
    public function delete($ids)
    {
        try {
            $this->authorize('delete', $this->findOrFail($ids));
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to delete the comment with id: ' . $ids);
        }
        return parent::delete($ids); // TODO: Change the autogenerated stub
    }

    /**
     * @param $data
     * @param int $id
     */
    public function update($data, int $id)
    {
        $comment = $this->findOrFail($id);
        try {
            $this->authorize('update', $comment);
        } catch (AuthorizationException $e) {
            Log::error(auth()->user()->email. ' tried to update the comment with id: ' . $id);
        }
        $comment->update($data);
    }
}
