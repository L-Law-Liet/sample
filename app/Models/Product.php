<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;

class Product extends Model
{
    use HasFactory;
    use SoftDeletes;


    protected $guarded = [];

    /**
     * @return BelongsTo
     */
    public function category(): BelongsTo
    {
        return $this->belongsTo(Category::class);
    }

    /**
     * @return mixed
     */
    public function client()
    {
        return $this->belongsTo(Client::class)->withTrashed();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
    }

    /**
     * @return mixed
     */
    public function problem_type()
    {
        return $this->belongsTo(ProblemType::class)->withTrashed();
    }

    /**
     * @return mixed
     */
    public function product_status()
    {
        return $this->belongsTo(ProductStatus::class)->withTrashed();
    }

    /**
     * @return BelongsTo
     */
    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class)->withTrashed();
    }

    /**
     * @return HasMany
     */
    public function comments(): HasMany
    {
        return $this->hasMany(Comment::class);
    }

    public function getCreatedAttribute()
    {
        return date('d.m.Y H:i', strtotime($this->created_at));
    }

    public function getClaimedAttribute()
    {
        return date('d.m.Y H:i', strtotime($this->claimed_at));
    }

}
